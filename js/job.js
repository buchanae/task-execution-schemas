/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.ga4gh_task_exec.Job');

goog.require('jspb.Message');
goog.require('proto.ga4gh_task_exec.FileLog');
goog.require('proto.ga4gh_task_exec.JobLog');
goog.require('proto.ga4gh_task_exec.Task');

goog.forwardDeclare('proto.ga4gh_task_exec.State');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ga4gh_task_exec.Job = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ga4gh_task_exec.Job.repeatedFields_, null);
};
goog.inherits(proto.ga4gh_task_exec.Job, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ga4gh_task_exec.Job.displayName = 'proto.ga4gh_task_exec.Job';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ga4gh_task_exec.Job.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ga4gh_task_exec.Job.prototype.toObject = function(opt_includeInstance) {
  return proto.ga4gh_task_exec.Job.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ga4gh_task_exec.Job} msg The msg instance to transform.
 * @return {!Object}
 */
proto.ga4gh_task_exec.Job.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toArray() : [],
    task: (f = msg.getTask()) && proto.ga4gh_task_exec.Task.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    proto.ga4gh_task_exec.JobLog.toObject, includeInstance),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.ga4gh_task_exec.FileLog.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * optional string jobID = 1;
 * @return {string}
 */
proto.ga4gh_task_exec.Job.prototype.getJobid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ga4gh_task_exec.Job.prototype.setJobid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * map<string, string> metadata = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.ga4gh_task_exec.Job.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate));
};


proto.ga4gh_task_exec.Job.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
};


/**
 * optional Task task = 3;
 * @return {?proto.ga4gh_task_exec.Task}
 */
proto.ga4gh_task_exec.Job.prototype.getTask = function() {
  return /** @type{?proto.ga4gh_task_exec.Task} */ (
    jspb.Message.getWrapperField(this, proto.ga4gh_task_exec.Task, 3));
};


/** @param {?proto.ga4gh_task_exec.Task|undefined} value */
proto.ga4gh_task_exec.Job.prototype.setTask = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ga4gh_task_exec.Job.prototype.clearTask = function() {
  this.setTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ga4gh_task_exec.Job.prototype.hasTask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional State state = 4;
 * @return {!proto.ga4gh_task_exec.State}
 */
proto.ga4gh_task_exec.Job.prototype.getState = function() {
  return /** @type {!proto.ga4gh_task_exec.State} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.ga4gh_task_exec.State} value */
proto.ga4gh_task_exec.Job.prototype.setState = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated JobLog logs = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.ga4gh_task_exec.JobLog>}
 */
proto.ga4gh_task_exec.Job.prototype.getLogsList = function() {
  return /** @type{!Array.<!proto.ga4gh_task_exec.JobLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ga4gh_task_exec.JobLog, 5));
};


/** @param {!Array.<!proto.ga4gh_task_exec.JobLog>} value */
proto.ga4gh_task_exec.Job.prototype.setLogsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ga4gh_task_exec.JobLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ga4gh_task_exec.JobLog}
 */
proto.ga4gh_task_exec.Job.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ga4gh_task_exec.JobLog, opt_index);
};


proto.ga4gh_task_exec.Job.prototype.clearLogsList = function() {
  this.setLogsList([]);
};


/**
 * repeated FileLog outputs = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.ga4gh_task_exec.FileLog>}
 */
proto.ga4gh_task_exec.Job.prototype.getOutputsList = function() {
  return /** @type{!Array.<!proto.ga4gh_task_exec.FileLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ga4gh_task_exec.FileLog, 6));
};


/** @param {!Array.<!proto.ga4gh_task_exec.FileLog>} value */
proto.ga4gh_task_exec.Job.prototype.setOutputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ga4gh_task_exec.FileLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ga4gh_task_exec.FileLog}
 */
proto.ga4gh_task_exec.Job.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ga4gh_task_exec.FileLog, opt_index);
};


proto.ga4gh_task_exec.Job.prototype.clearOutputsList = function() {
  this.setOutputsList([]);
};


